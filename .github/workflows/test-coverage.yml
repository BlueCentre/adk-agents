name: Test Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      modules:
        description: "Specific module to test (e.g., agents.devops, src.wrapper.adk)"
        required: false
        default: "all"
        type: string

jobs:
  call-test-coverage:
    name: Run Tests and Coverage Analysis
    uses: ./.github/workflows/reusable-python-test-coverage.yml
    with:
      python-version: "3.11"
      modules: ${{ github.event.inputs.modules }}
      checkout-fetch-depth: 0 # SonarQube needs full history, so this is needed for the artifacts
      run-api-tests: true # Assuming coverage analysis also involves API tests
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

  coverage-report:
    name: Report SonarQube
    needs: call-test-coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: test-and-coverage-reports # Updated artifact name
          path: . # Download to current directory

      - name: Make extract_version.sh executable
        run: |
          chmod +x scripts/ci/extract_version.sh

      - name: Extract version
        id: get_version
        run: |
          VERSION=$(./scripts/ci/extract_version.sh)
          echo "PROJECT_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          PROJECT_VERSION: ${{ env.PROJECT_VERSION }}
          # SONAR_SCANNER_OPTS: "-Dsonar.branch.name=${{ github.ref_name }}"
